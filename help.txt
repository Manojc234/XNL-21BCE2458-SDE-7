import {
  MdAccountBalance,
  MdOutlineManageAccounts,
  MdAttachMoney,
  MdOutlineSwapHoriz,
  MdSettings,
  MdPerson,
  MdAdd,
  MdEdit,
  MdGroup,
  MdCreate,
  MdViewList,
  MdCheckCircle,
  MdPending,
  MdError,
  MdDownload,
  MdFilterList,
  MdSummarize,
  MdPassword,
  MdSupervisorAccount,
} from "react-icons/md";

export const SidebarData = {
  Accounts: {
    icon: <MdAccountBalance />,
    subMenu: {
      "Current Account": {
        icon: <MdOutlineManageAccounts />,
        subMenu: {
          "Account Details": <MdPerson />,
          "Service Request": <MdGroup />,
          Employees: <MdGroup />,
        },
      },
      "Change Account": {
        icon: <MdOutlineManageAccounts />,
        subMenu: {
          "Add Account": <MdAdd />,
          "Edit Account": <MdEdit />,
          "Edit Employee Accounts": <MdEdit />,
        },
      },
    },
  },
  Cash: {
    icon: <MdAttachMoney />,
    subMenu: {
      Create: {
        icon: <MdCreate />,
        subMenu: {
          Payroll: <MdCreate />,
          "Rolled Payees": <MdGroup />,
          Drafts: <MdCreate />,
          "Quick Currency Calculator": <MdCreate />,
        },
      },
      Manage: {
        icon: <MdViewList />,
        subMenu: {
          "Make Approvers": <MdGroup />,
          "View Rolled Payees": <MdGroup />,
        },
      },
      Approver: {
        icon: <MdCheckCircle />,
        subMenu: {
          "Approved Payees": <MdCheckCircle />,
          "Pending Payees": <MdPending />,
        },
      },
    },
  },
  Transactions: {
    icon: <MdOutlineSwapHoriz />,
    subMenu: {
      "Rolled Payees": {
        icon: <MdGroup />,
        subMenu: {
          "Failed Transactions": <MdError />,
          "Successful Transactions": <MdCheckCircle />,
          "Hold Transactions": <MdPending />,
        },
      },
      "E-Statements": {
        icon: <MdDownload />,
        subMenu: {
          "Filter Transactions": <MdFilterList />,
          "Download Transactions": <MdDownload />,
          "Transactions Summary": <MdSummarize />,
        },
      },
    },
  },
  Settings: {
    icon: <MdSettings />,
    subMenu: {
      "Change Password": <MdPassword />,
      "View Approvers": <MdSupervisorAccount />,
      "View Managers": <MdSupervisorAccount />,
      "View Creates": <MdSupervisorAccount />,
    },
  },
};


import React, { useState } from "react";
import { SidebarData } from "./SidebarData";
import "./App.css";

function Sidebar({ role }) {
  const [openMenus, setOpenMenus] = useState({});

  const toggleMenu = (menuPath) => {
    setOpenMenus((prev) => ({
      ...prev,
      [menuPath]: !prev[menuPath],
    }));
  };

  // Role-based filter
  const checkAccess = (menuKey) => {
    if (menuKey === "Create" && role !== "creator") return false;
    if (menuKey === "Manage" && role !== "manager") return false;
    if (menuKey === "Approver" && role !== "approver") return false;
    return true;
  };

  const renderMenu = (menu, parentKey = "") => {
    return Object.entries(menu).map(([key, value]) => {
      const menuPath = parentKey + key;

      if (typeof value === "object" && value.subMenu) {
        if (!checkAccess(key)) return null;

        return (
          <div key={menuPath} className="menu-item">
            <div
              className="menu-title"
              onClick={() => toggleMenu(menuPath)}
            >
              <span className="icon">{value.icon}</span>
              <span>{key}</span>
              <span className="arrow">{openMenus[menuPath] ? "▲" : "▼"}</span>
            </div>
            {openMenus[menuPath] && (
              <div className="submenu">{renderMenu(value.subMenu, menuPath)}</div>
            )}
          </div>
        );
      } else {
        return (
          <div key={menuPath} className="menu-item leaf">
            <span className="icon">{value}</span>
            <span>{key}</span>
          </div>
        );
      }
    });
  };

  return (
    <div className="sidebar">
      <h2 className="logo">Dashboard</h2>
      <div className="menu">{renderMenu(SidebarData)}</div>
    </div>
  );
}

export default Sidebar;


.app {
  display: flex;
  height: 100vh;
  font-family: "Segoe UI", sans-serif;
}

/* Sidebar */
.sidebar {
  width: 260px;
  background: #f9f9f9;
  border-right: 1px solid #ddd;
  padding: 20px;
  overflow-y: auto;
}

.logo {
  font-size: 22px;
  font-weight: bold;
  margin-bottom: 20px;
  color: #0d47a1;
}

.menu {
  display: flex;
  flex-direction: column;
}

.menu-item {
  margin-bottom: 8px;
}

.menu-title {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 8px 12px;
  cursor: pointer;
  border-radius: 6px;
  transition: background 0.2s ease;
  color: #333;
}

.menu-title:hover {
  background: #e3f2fd;
  color: #0d47a1;
}

.submenu {
  margin-left: 20px;
  margin-top: 6px;
}

.menu-item.leaf {
  display: flex;
  align-items: center;
  gap: 10px;
  padding: 6px 12px;
  margin-left: 15px;
  font-size: 14px;
  cursor: pointer;
  border-radius: 6px;
  transition: background 0.2s;
}

.menu-item.leaf:hover {
  background: #e3f2fd;
  color: #0d47a1;
}

.icon {
  margin-right: 8px;
}

.arrow {
  font-size: 12px;
  margin-left: auto;
  color: #777;
}

/* Content */
.content {
  flex: 1;
  padding: 40px;
}



import React from "react";
import Sidebar from "./Sidebar";
import "./App.css";

function App() {
  // Try: "creator" | "manager" | "approver"
  const role = "creator";

  return (
    <div className="app">
      <Sidebar role={role} />
      <div className="content">
        <h1>Welcome, {role}</h1>
        <p>This is your dashboard. Sidebar is dynamic and role-based.</p>
      </div>
    </div>
  );
}

export default App;
