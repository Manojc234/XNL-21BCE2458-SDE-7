import React, { useState } from "react";
import "bootstrap/dist/css/bootstrap.min.css";
import "../Styles/custom.css";
import ScLogo from "../assets/ScLogo.jpg";
import Logout from "../assets/Logout.png";
import user from "../assets/user.jpg";
import Home from "../assets/Home.png";
import payroll from "../assets/payroll.png";

function Dashboard({ role }) {
  const [selectedMenu, setSelectedMenu] = useState("home");

  const menuItems = [
    { key: "home",label: "HOME", img:<img class="logo4" src={Home} alt="none"/>,roles: ["admin", "creator", "approver"] },
    { key: "manageUsers", label: "MANAGE",img:<img class="logo4" src={payroll} alt="none"/>, roles: ["admin"] },
    { key: "createTransaction", label: "CREATE",img:<img class="logo4" src={payroll} alt="none"/>, roles: ["creator", "admin"] },
    { key: "approvePayments", label: "APPROVE",img:<img class="logo4" src={Home} alt="none"/>, roles: ["approver", "admin"] },
    { key: "reports", label: "REPORTS",img:<img class="logo4" src={Home} alt="none"/>, roles: ["admin", "creator", "approver"] },
  ];

  const renderHome = () => (
    <div className="container-fluid">
      <div className="nav"></div>
      <div className="row g-4 mb-4">
        <div className="col-md-4">
          <div className="card gradient-card shadow-sm text-white">
            <div className="card-body">
              <h5 className="card-title">Account Balance</h5>
              <h3>₹ 2,45,000</h3>
              <p>Updated just now</p>
            </div>
          </div>
        </div>
        <div className="col-md-4">
          <div className="card gradient-card-2 shadow-sm text-white">
            <div className="card-body">
              <h5 className="card-title">Approval Status</h5>
              <h3>5 Pending</h3>
              <p>Awaiting action</p>
            </div>
          </div>
        </div>
        <div className="col-md-4">
          <div className="card gradient-card-3 shadow-sm text-white">
            <div className="card-body">
              <h5 className="card-title">Transactions Today</h5>
              <h3>23</h3>
              <p>Including drafts</p>
            </div>
          </div>
        </div>
      </div>

      <div className="card shadow-sm mb-4">
        <div className="card-header text-white d-flex justify-content-between align-items-center">
          <span>Transaction History</span>
          <button className="btn btn-light btn-sm">⬇ Download History</button>
        </div>
        <div className="table-responsive">
          <table className="table table-hover modern-table mb-0">
            <thead>
              <tr>
                <th>#</th>
                <th>Date</th>
                <th>Type</th>
                <th>Amount</th>
                <th>Status</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td>1</td>
                <td>14 Aug 2025</td>
                <td>Debit</td>
                <td>₹ 15,000</td>
                <td><span className="badge bg-success">Completed</span></td>
              </tr>
              <tr>
                <td>2</td>
                <td>14 Aug 2025</td>
                <td>Debit</td>
                <td>₹ 7,500</td>
                <td><span className="badge bg-warning">Pending</span></td>
              </tr>
              <tr>
                <td>3</td>
                <td>13 Aug 2025</td>
                <td>Debit</td>
                <td>₹ 25,000</td>
                <td><span className="badge bg-danger">Failed</span></td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );

  const renderContent = () => {
    const menu = menuItems.find((item) => item.key === selectedMenu);
    if (!menu.roles.includes(role)) {
      return <div className="alert alert-danger">You are restricted</div>;
    }
    if (menu.key === "home") return renderHome();
    return (
      <div className="p-3">
        <h4>{menu.label}</h4>
        <p>Content for {menu.label}</p>
      </div>
    );
  };

  return (
    <div className="d-flex dashboard-container">
      <div className="bar text-white p-3">
        <img class="logo" src={ScLogo} alt="none"/>
        {menuItems.map((item) => (
          <div 
            key={item.key}
            className={`content btn w-100 mb-2 text-light text-start ${selectedMenu === item.key}`}
            onClick={() => setSelectedMenu(item.key)}
          >
            <span className="me-2">{item.img}</span>
            {item.label}
          </div>
        ))}
      </div>
      <div className="flex-grow-1 d-flex flex-column">
        <nav className="px-3 d-flex justify-content-between align-items-center">
          <div className="userprofile text-light"><img class="logo2" src={user} alt="none"/>  SCB0334</div>
          <img class="logo1"src={Logout} alt="none"/>
        </nav>
        <div className="flex-grow-1 p-4 bg-light">{renderContent()}</div>
        
      </div>
      
    </div>
  );
}
export default Dashboard;


.dashboard-container {
  height: 100vh;
}
  
  .bar {
    width: 220px;
    min-height: 100vh;
    background-color: #023b97dc;
  }
  
  .gradient-card {
    background-color: #023b97dc;
    border: none;
    border-radius: 10px;
  }
  
  .gradient-card-2 {
    background-color: #023b97dc;
    border: none;
    border-radius: 10px;
  }
  
  .gradient-card-3 {
    background-color: #023b97dc;
    border: none;
    border-radius: 10px;
  }
  
  .card {
    border-radius: 10px;
  }
  
  .modern-table thead {
    background-color: #023b97dc;
    color: white;
  }
  
  .modern-table tbody tr:hover {
    background: #f1f5ff;
  }
  
  .badge {
    font-size: 0.85rem;
  }
  .logo{
    height: 80px;
    width:80px;
    margin-bottom: 40px;
    margin-left: 30px;
    border-radius: 40px;
  }
  .logo1{
    height: 30px;
    width:30px;
    border-radius: 40px;
    
  }
  .px-3{
    background-color: #023b97dc;
    height: 80px;
    
  }
  .content{
    cursor: pointer;
    margin-top: 5px;
    
  }
  .content:hover{
    background-color:#04215f ;

  }
  .userprofile{
    margin-left: 800px;
    cursor: pointer;
  }
  .logo2{
    height: 20px;
    border-radius: 40px;
    margin-top: -1px;


  }
  .logo4{
    height: 20px;
    border-radius: 40px;


  }
  .card-header{
    background-color: #023b97dc;
  }


 
import React from "react";


import Dashboard from "./Components/Dashboard";
import "./Styles/custom.css";
function App() {
  // Role will later come from backend
  const role = "creator"; // admin | creator | approver
  return <Dashboard role={role} />;
}

export default App;



public class TableOf10 {
    public static void main(String[] args) {
        int num = 10;
        for (int i = 1; i <= 10; i++) {
            System.out.println(num + " x " + i + " = " + (num * i));
        }
    }
}

 
public class FibonacciSeries {
    public static void main(String[] args) {
        int n = 10;
        int a = 0, b = 0, c = 1;

        System.out.print("Fibonacci Series: ");
        for (int i = 1; i <= n; i++) {
            System.out.print(a + " ");
            a = b;
            b = c;
            c = a + b;
        }
    }
}

import java.util.Scanner;

public class OddEvenCheck {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        System.out.print("Enter a number: ");
        int num = sc.nextInt();

        if (num % 2 == 0) {
            System.out.println(num + " is Even.");
        } else {
            System.out.println(num + " is Odd.");
        }
        sc.close();
    }
}


import java.util.Scanner;

public class LargestOfTwo {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        System.out.print("Enter first number: ");
        int num1 = sc.nextInt();

        System.out.print("Enter second number: ");
        int num2 = sc.nextInt();

        if (num1 > num2) {
            System.out.println(num1 + " is larger.");
        } else if (num2 > num1) {
            System.out.println(num2 + " is larger.");
        } else {
            System.out.println("Both numbers are equal.");
        }
        sc.close();
    }
}


import java.util.Arrays;

public class ArraySortExample {
    public static void main(String[] args) {
        int[] arr = {45, 12, 67, 23, 89, 5};

        System.out.println("Original Array: " + Arrays.toString(arr));

        Arrays.sort(arr);
        System.out.println("Sorted Array: " + Arrays.toString(arr));
    }
}



import java.util.Arrays;

public class ArrayReverseExample {
    public static void main(String[] args) {
        int[] arr = {10, 20, 30, 40, 50};

        System.out.println("Original Array: " + Arrays.toString(arr));

        System.out.print("Reversed Array: [");
        for (int i = arr.length - 1; i >= 0; i--) {
            System.out.print(arr[i]);
            if (i != 0) System.out.print(", ");
        }
        System.out.println("]");
    }
}
