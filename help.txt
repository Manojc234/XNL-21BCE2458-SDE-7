package com.example.dto;

import java.time.LocalDate;

public class ProtegrityAppDTO {

    public Long citSno;
    public String citApplicationName;
    public String citType;
    public LocalDate appOnboardDate;
    public String citAppStatus;
    public String citItamNo;
    public String citAppOwner;
    public String citBusCriticality;
    public String cetDusUnit;
    public String citPriContact;
    public String citRemGroup;
    public String citSlcContact;
    public String citServiceProvided;
    public String citUseCase;
    public String citDatabase;
    public String citServiceModel;
    public String citBussJustification;
    public String citDoHostedType;
    public String citStorageDevices;
    public String citTypePrNonPr;
    public String citReqNo;
    public String citActivity;
    public LocalDate citAmendedDate;
    public String citAmendedBy;
    public String citRemarks;
    public String citEntSpoc;
    public LocalDate citProdDate;
    public LocalDate recertDate;
    public String recertBy;
    public Long appExpDays;
    public String recertAppStatus;
    public String citProdCrNo;
    public String view; // literal 'VIEW'

    // Constructor matching JPQL constructor expression
    public ProtegrityAppDTO(
        Long citSno,
        String citApplicationName,
        String citType,
        LocalDate appOnboardDate,
        String citAppStatus,
        String citItamNo,
        String citAppOwner,
        String citBusCriticality,
        String cetDusUnit,
        String citPriContact,
        String citRemGroup,
        String citSlcContact,
        String citServiceProvided,
        String citUseCase,
        String citDatabase,
        String citServiceModel,
        String citBussJustification,
        String citDoHostedType,
        String citStorageDevices,
        String citTypePrNonPr,
        String citReqNo,
        String citActivity,
        LocalDate citAmendedDate,
        String citAmendedBy,
        String citRemarks,
        String citEntSpoc,
        LocalDate citProdDate,
        LocalDate recertDate,
        String recertBy,
        Long appExpDays,
        String recertAppStatus,
        String citProdCrNo,
        String view
    ) {
        this.citSno = citSno;
        this.citApplicationName = citApplicationName;
        this.citType = citType;
        this.appOnboardDate = appOnboardDate;
        this.citAppStatus = citAppStatus;
        this.citItamNo = citItamNo;
        this.citAppOwner = citAppOwner;
        this.citBusCriticality = citBusCriticality;
        this.cetDusUnit = cetDusUnit;
        this.citPriContact = citPriContact;
        this.citRemGroup = citRemGroup;
        this.citSlcContact = citSlcContact;
        this.citServiceProvided = citServiceProvided;
        this.citUseCase = citUseCase;
        this.citDatabase = citDatabase;
        this.citServiceModel = citServiceModel;
        this.citBussJustification = citBussJustification;
        this.citDoHostedType = citDoHostedType;
        this.citStorageDevices = citStorageDevices;
        this.citTypePrNonPr = citTypePrNonPr;
        this.citReqNo = citReqNo;
        this.citActivity = citActivity;
        this.citAmendedDate = citAmendedDate;
        this.citAmendedBy = citAmendedBy;
        this.citRemarks = citRemarks;
        this.citEntSpoc = citEntSpoc;
        this.citProdDate = citProdDate;
        this.recertDate = recertDate;
        this.recertBy = recertBy;
        this.appExpDays = appExpDays;
        this.recertAppStatus = recertAppStatus;
        this.citProdCrNo = citProdCrNo;
        this.view = view;
    }

    // Default constructor for frameworks
    public ProtegrityAppDTO() {}
}



package com.example.repository;

import com.example.dto.ProtegrityAppDTO;
import io.quarkus.hibernate.orm.panache.PanacheRepositoryBase;
import jakarta.enterprise.context.ApplicationScoped;
import jakarta.persistence.EntityManager;
import jakarta.persistence.PersistenceContext;
import java.util.List;

@ApplicationScoped
public class ProtegrityAppRepository implements PanacheRepositoryBase<ProtegrityAppDTO, Long> {

    @PersistenceContext
    EntityManager entityManager;

    public List<ProtegrityAppDTO> getAllProtegrityApps(String appUser) {
        String jpql = "SELECT new com.example.dto.ProtegrityAppDTO(" +
                      "c.citSno, c.citApplicationName, c.citType, c.appOnboardDate, " +
                      "c.citAppStatus, c.citItamNo, c.citAppOwner, c.citBusCriticality, " +
                      "c.cetDusUnit, c.citPriContact, c.citRemGroup, c.citSlcContact, " +
                      "c.citServiceProvided, " +
                      "CASE WHEN c.citUseCase = 'Others' THEN c.citUseCaseOthers ELSE c.citUseCase END, " +
                      "CASE WHEN c.citDatabase = 'Others' THEN c.citDbOthers ELSE c.citDatabase END, " +
                      "c.citServiceModel, c.citBussJustification, c.citDoHostedType, " +
                      "CASE WHEN c.citStorageDevices = 'Others' THEN c.citStorageOthers ELSE c.citStorageDevices END, " +
                      "c.citTypePrNonPr, c.citReqNo, c.citActivity, c.citAmendedDate, " +
                      "c.citAmendedBy, c.citRemarks, c.citEntSpoc, c.citProdDate, " +
                      "c.recertDate, c.recertBy, TRUNC(c.recertAppRenewalDate), " +
                      "CASE WHEN c.recertAppStatus = 'RECERT RESPOND' THEN 'INREVIEW' " +
                      "WHEN c.recertAppStatus = 'RECERT COMPLETED' THEN 'COMPLETED' " +
                      "ELSE c.recertAppStatus END, " +
                      "c.citProdCrNo, 'VIEW') " +
                      "FROM CutApplicationEntity c " +
                      "WHERE c.citAppStatus != 'Decommissioned' " +
                      "AND c.citType = 'protegrity' " +
                      "AND (" +
                      "c.pim = :appUser OR c.workOrderAssignee = :appUser OR " +
                      "c.brquestApprover = :appUser OR c.citPriContact = :appUser OR " +
                      "c.citAppOwner = :appUser OR c.citIntSpoc = :appUser OR " +
                      "c.citSecContact = :appUser" +
                      ")";
        
        return entityManager.createQuery(jpql, ProtegrityAppDTO.class)
                            .setParameter("appUser", appUser)
                            .getResultList();
    }
}