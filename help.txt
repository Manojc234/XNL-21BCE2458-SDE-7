import { html, LitElement, css } from "lit";
import { createContext, contexts } from "@scdevkit/data";

const graphQLClientContext = createContext(contexts.GRAPHQL_CLIENT);

export class Grid extends LitElement {
  static styles = css`
    :host {
      display: flex;
      justify-content: center;
      padding: 1rem;
    }
    sc-data-grid {
      width: 100%;
      max-width: 1000px;
    }
  `;

  static properties = {
    rows: { type: Array },
  };

  constructor() {
    super();
    this.rows = [];
  }

  _graphQLClientContextConsumer = graphQLClientContext.createConsumer(this);

  connectedCallback() {
    super.connectedCallback();
    this.fetchData();
  }

  async fetchData() {
    const query = `
      query{
        show {
          name
          email
          dob
          gender
          pno
        }
      }
    `;

    try {
      const graphQLClient = this._graphQLClientContextConsumer.value;
      console.log("GraphQL Client:",graphQLClient);
      const result = await graphQLClient.query(query);
      console.log(result.json());

      if (result.errors) {
        console.error("GraphQL errors:", result.errors);
        return;
      }

      if (result.data && result.data.show) {
        this.rows = result.data.show.map((item, index) => ({
          //uuid: index.toString(),
          name: item.name?item.name.trim():"",
          email: item.email?item.email.trim():"",
          dob: item.dob||"",
          gender: item.gender||"",
          pno: item.pno || "",
        }));
        console.log(result.data.show);
        console.log(this.rows);
      }
    } catch (err) {
      console.error("GraphQL query failed:", err);
    }
  }

  render() {
    return html`
      <sc-data-grid
        .data=${this.rows}
        .columns=${[
          { property: "name", header: "Name" },
          { property: "email", header: "Email" },
          { property: "dob", header: "Date of Birth" },
          { property: "gender", header: "Gender" },
          { property: "phoneNumber", header: "Phone Number" },
        ]}
      >
      </sc-data-grid>
    `;
  }
}

