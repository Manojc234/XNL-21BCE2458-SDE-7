 // NEW: modal state
  const [restrictOpen, setRestrictOpen] = useState(false);
  const [restrictMsg, setRestrictMsg] = useState("");

  // ðŸ”’ Access control
  const checkAccess = (menuKey,subKey) => {
    // role-based full menu restrictions
    if ((menuKey === "Create" || menuKey === "Payroll" || menuKey === "Rolled Payees"|| menuKey === "Drafts"|| menuKey === "Quick Currency Calculator") && role !== "creator") return false;
    if ((menuKey === "Manage" ||menuKey === "Make Approvers"|| menuKey === "View Rolled Payees") && role !== "manager") return false;
    if ((menuKey === "Approver" || menuKey === "Approved Payees"|| menuKey === "Pending Payees") && role !== "approver") return false;

    // specific item restrictions
    if ((menuKey === "Add Account" || menuKey==="Change Account" || menuKey==="Edit Account" || menuKey==="Edit Employee Accounts" ) && (role === "approver" || role==="manager")) return false;
    if ((menuKey === "View Approvers" || menuKey === "View Creators" || menuKey==="View Managers") && (role === "creator" || role === "approver")) return false;
    if (menuKey === "Change Account" && role === "manager") return false;

    return true;
  };


// Handle clicks with accessibility restriction
  const handleClick = (menuKey,subKey,thirdKey) => {
    if (!checkAccess(menuKey,subKey,thirdKey)) {
      setRestrictMsg(`ðŸš« You are restricted from accessing "${menuKey}"!`);
      setRestrictOpen(true);
      return;
    }
    toast.success(`âœ… Accessing ${menuKey}`, {
      position: "top-right",
      autoClose: 1500,
    });
  };

  // Close modal with ESC
  useEffect(() => {
    const onKey = (e) => {
      if (e.key === "Escape") setRestrictOpen(false);
    };
    if (restrictOpen) window.addEventListener("keydown", onKey);
    return () => window.removeEventListener("keydown", onKey);
  }, [restrictOpen]);
