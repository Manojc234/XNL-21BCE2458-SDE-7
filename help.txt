// Dashboard.js
import React, { useState } from "react";
import {
  FaHome, FaUsersCog, FaPlusCircle, FaCheckSquare, FaCog, FaFileInvoiceDollar,
  FaUserEdit, FaUserPlus, FaExchangeAlt, FaClipboardList, FaLock, FaUserTie,
  FaUserShield, FaMoneyCheckAlt, FaCalculator, FaFileAlt, FaDownload, FaListUl
} from "react-icons/fa";
import { MdAccountBalance, MdPayment, MdOutlineManageAccounts } from "react-icons/md";
import "bootstrap/dist/css/bootstrap.min.css";
import "../Styles/custom.css";
import ScLogo from "../assets/ScLogo.jpg";
import Logout from "../assets/Logout.png";
import user from "../assets/user.jpg";

function Dashboard({ role }) {
  const [selectedMenu, setSelectedMenu] = useState("home");
  const [hoveredMenu, setHoveredMenu] = useState(null);
  const [showBalance, setShowBalance] = useState(false);

  // MENU CONFIG
  const menuItems = [
    {
      key: "accounts",
      label: "Accounts",
      icon: <MdAccountBalance />,
      roles: ["operator", "creator", "approver", "manager"],
      subMenu: [
        {
          label: "Current Account",
          subMenu: [
            { label: "Account Details", icon: <FaFileAlt /> },
            { label: "Service Request", icon: <FaClipboardList /> },
            { label: "Employees", icon: <FaUserTie /> }
          ]
        },
        {
          label: "Change Account",
          subMenu: [
            { label: "Add Account", icon: <FaUserPlus /> },
            { label: "Edit Account", icon: <FaUserEdit /> },
            { label: "Edit Employee Accounts", icon: <MdOutlineManageAccounts /> }
          ]
        }
      ]
    },
    {
      key: "cash",
      label: "Cash",
      icon: <FaMoneyCheckAlt />,
      roles: ["operator", "creator", "approver", "manager"],
      subMenu: [
        {
          label: "Create",
          roles: ["creator"],
          subMenu: [
            { label: "Payroll", icon: <FaFileInvoiceDollar /> },
            { label: "Rolled Payees", icon: <FaUsersCog /> },
            { label: "Drafts", icon: <FaFileAlt /> },
            { label: "Quick Currency Calculator", icon: <FaCalculator /> }
          ]
        },
        {
          label: "Manage",
          roles: ["manager"],
          subMenu: [
            { label: "Make Approvers", icon: <FaUserShield /> },
            { label: "View Rolled Payees", icon: <FaUsersCog /> }
          ]
        },
        {
          key: "approve",
          label: "Approve",
          roles: ["approver"],
          subMenu: [
            { label: "Approved Payees", icon: <FaCheckSquare /> },
            { label: "Pending Payees", icon: <FaClipboardList /> }
          ]
        }
      ]
    },
    {
      key: "transactions",
      label: "Transactions",
      icon: <FaExchangeAlt />,
      roles: ["operator", "creator", "approver", "manager"],
      subMenu: [
        {
          label: "Rolled Payees",
          subMenu: [
            { label: "Failed Transactions", icon: <FaTimes /> },
            { label: "Successful Transactions", icon: <FaCheckSquare /> },
            { label: "Hold Transactions", icon: <FaClipboardList /> }
          ]
        },
        {
          label: "E-Statements",
          subMenu: [
            { label: "Filter Transactions", icon: <FaListUl /> },
            { label: "Download Transactions", icon: <FaDownload /> },
            { label: "Transactions Summary", icon: <FaChartBar /> }
          ]
        }
      ]
    },
    {
      key: "settings",
      label: "Settings",
      icon: <FaCog />,
      roles: ["operator", "creator", "approver", "manager"],
      subMenu: [
        { label: "Change Password", icon: <FaLock /> },
        { label: "View Approvers", icon: <FaUserShield /> },
        { label: "View Managers", icon: <FaUserTie /> },
        { label: "View Creates", icon: <FaPlusCircle /> }
      ]
    }
  ];

  const renderHome = () => (
    <div className="container-fluid">
      <div className="row g-4 mb-4">
        <div className="col-md-4">
          <div className="card gradient-card shadow-sm text-white">
            <div className="card-body">
              <h5 className="card-title">Account Balance</h5>
              {showBalance ? <h3>â‚¹ 2,00,45,000</h3> : <h3>****</h3>}
              <button
                className="b btn btn-light btn-sm mt-2"
                onClick={() => setShowBalance(!showBalance)}
              >
                {showBalance ? "Hide Balance" : "View Balance"}
              </button>
            </div>
          </div>
        </div>
        <div className="col-md-4">
          <div className="card gradient-card-2 shadow-sm text-white">
            <div className="card-body">
              <h5 className="card-title">Approval Status</h5>
              <h3>5 Pending</h3>
              <button className="b btn btn-light btn-sm mt-2">Approve</button>
            </div>
          </div>
        </div>
        <div className="col-md-4">
          <div className="card gradient-card-3 shadow-sm text-white">
            <div className="card-body">
              <h5 className="card-title">Transactions Today</h5>
              <h3>23</h3>
              <button className="b btn btn-light btn-sm mt-2">Transactions</button>
            </div>
          </div>
        </div>
      </div>
    </div>
  );

  const renderContent = () => {
    const menu = menuItems.find((item) => item.key === selectedMenu);
    if (!menu) return renderHome();
    if (!menu.roles.includes(role)) {
      return <div className="alert alert-danger">You are restricted</div>;
    }
    if (menu.key === "home") return renderHome();
    return (
      <div className="p-3">
        <h4>{menu.label}</h4>
        <p>Content for {menu.label}</p>
      </div>
    );
  };

  const renderSubMenu = (subMenu) => (
    <div className="submenu shadow-sm">
      {subMenu.map((sub, idx) => (
        <div key={idx} className="submenu-item">
          {sub.icon && <span className="me-2">{sub.icon}</span>}
          {sub.label}
          {sub.subMenu && renderSubMenu(sub.subMenu)}
        </div>
      ))}
    </div>
  );

  return (
    <div className="d-flex dashboard-container">
      <div className="bar text-white p-3">
        <img className="logo" src={ScLogo} alt="none" />
        <span className="brand-name text-light">Straight2Bank</span>
        {menuItems.map((item) => (
          <div
            key={item.key}
            className={`content btn w-100 mb-2 text-light text-start ${selectedMenu === item.key}`}
            onClick={() => setSelectedMenu(item.key)}
            onMouseEnter={() => setHoveredMenu(item.key)}
            onMouseLeave={() => setHoveredMenu(null)}
            style={{ position: "relative" }}
          >
            <span className="me-2">{item.icon}</span>
            {item.label}
            {hoveredMenu === item.key && item.subMenu && renderSubMenu(item.subMenu)}
          </div>
        ))}
      </div>
      <div className="flex-grow-1 d-flex flex-column">
        <nav className="px-3 d-flex justify-content-between align-items-center">
          <div className="userprofile text-light">
            <img className="logo2" src={user} alt="none" /> SCB0334
          </div>
          <img className="logo1" src={Logout} alt="none" />
        </nav>
        <div className="flex-grow-1 p-4 bg-light">{renderContent()}</div>
      </div>
    </div>
  );
}

export default Dashboard;



/* ===== DASHBOARD LAYOUT ===== */
.dashboard-container {
  height: 100vh;
  display: flex;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
}

/* ===== SIDEBAR ===== */
.bar {
  width: 220px;
  min-height: 100vh;
  background: linear-gradient(180deg, #023b97dc, #04215f);
  transition: all 0.3s ease-in-out;
  padding-top: 20px;
  position: relative;
  box-shadow: 2px 0 6px rgba(0, 0, 0, 0.15);
}

.logo {
  height: 60px;
  width: 60px;
  margin-bottom: 20px;
  margin-left: 20px;
  border-radius: 50%;
  cursor: pointer;
  border: 2px solid #fff;
}

.brand-name {
  display: block;
  font-size: 1rem;
  font-weight: 600;
  margin-left: 20px;
  margin-bottom: 30px;
}

/* ===== SIDEBAR MENU ===== */
.content {
  cursor: pointer;
  padding: 12px 15px;
  border-radius: 6px;
  display: flex;
  align-items: center;
  font-size: 0.95rem;
  transition: background 0.3s ease, padding-left 0.3s ease;
}

.content:hover {
  background-color: #295caddc;
  padding-left: 20px;
}

.content span {
  font-size: 1.2rem;
  margin-right: 10px;
}

/* ===== SUBMENU ===== */
.submenu {
  position: absolute;
  left: 100%;
  top: 0;
  background: #04215f;
  color: white;
  border-radius: 0.5rem;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
  min-width: 220px;
  z-index: 100;
  opacity: 0;
  visibility: hidden;
  transform: translateX(10px);
  transition: all 0.3s ease;
}

.content:hover > .submenu {
  opacity: 1;
  visibility: visible;
  transform: translateX(0);
}

.submenu-item {
  padding: 12px 16px;
  cursor: pointer;
  display: flex;
  align-items: center;
  transition: background 0.2s ease, padding-left 0.2s ease;
}

.submenu-item span {
  margin-right: 8px;
  font-size: 1rem;
}

.submenu-item:hover {
  background-color: #295caddc;
  padding-left: 22px;
}

/* ===== NAVBAR (TOP) ===== */
.px-3 {
  background-color: #023b97dc;
  height: 70px;
  color: white;
  display: flex;
  align-items: center;
  box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.1);
}

.userprofile {
  display: flex;
  align-items: center;
  gap: 10px;
  cursor: pointer;
  font-size: 0.9rem;
  font-weight: 500;
}

.logo2 {
  height: 32px;
  width: 32px;
  border-radius: 50%;
  border: 2px solid #fff;
}

.logo1 {
  height: 28px;
  width: 28px;
  margin-right: 20px;
  cursor: pointer;
  transition: transform 0.2s ease;
}

.logo1:hover {
  transform: rotate(15deg);
}

/* ===== CARDS ===== */
.card {
  border-radius: 12px;
  border: none;
  transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.card:hover {
  transform: translateY(-3px);
  box-shadow: 0px 6px 14px rgba(0, 0, 0, 0.15);
}

.card-body {
  background: #023b97dc;
  border-radius: 12px;
  color: white;
  transition: background 0.3s ease;
}

.card-body:hover {
  background: #04215f;
}

/* ===== TABLE ===== */
.modern-service-table {
  width: 100%;
  border-collapse: separate;
  border-spacing: 0 10px;
}

.modern-service-table thead {
  background-color: #023b97dc;
  color: white;
}

.modern-service-table thead th {
  padding: 12px;
  text-align: left;
}

.modern-service-table tbody tr {
  background-color: #fff;
  box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.05);
  border-radius: 8px;
}

/* ===== BUTTONS ===== */
.b, .Q {
  background-color: #f1f5ff;
  border: none;
  color: black;
  padding: 6px 14px;
  border-radius: 6px;
  transition: all 0.3s ease;
}

.b:hover, .Q:hover {
  background-color: #295caddc;
  color: white;
}


import React, { useState } from "react";
import "../Styles/custom.css";

const Dashboard = () => {
  const [openMenu, setOpenMenu] = useState(null); // Track open Layer 1

  const toggleMenu = (menu) => {
    setOpenMenu(openMenu === menu ? null : menu);
  };

  // Sidebar menu data
  const menuItems = {
    Accounts: {
      "Current Account": [
        "Account Details",
        "Service Request",
        "Employees",
      ],
      "Change Account": [
        "Add Account",
        "Edit Account",
        "Edit Employee Accounts",
      ],
    },
    Cash: {
      Create: [
        "Payroll",
        "Rolled Payees",
        "Drafts",
        "Quick Currency Calculator",
      ],
      Manage: ["Make Approvers", "View Rolled Payees"],
      Approve: ["Approved Payees", "Pending Payees"],
    },
    Transactions: {
      "Rolled Payees": [
        "Failed Transactions",
        "Successful Transactions",
        "Hold Transactions",
      ],
      "E-Statements": [
        "Filter Transactions",
        "Download Transactions",
        "Transactions Summary",
      ],
    },
    Settings: {
      "": [
        "Change Password",
        "View Approvers",
        "View Managers",
        "View Creates",
      ],
    },
  };

  return (
    <div className="dashboard-container">
      {/* Sidebar */}
      <div className="bar">
        <img src="/assets/ScLogo.jpg" alt="Logo" className="logo" />
        <span className="brand-name">Straight2Bank</span>

        {Object.keys(menuItems).map((main) => (
          <div key={main}>
            {/* Layer 1 */}
            <div
              className="content"
              onClick={() => toggleMenu(main)}
            >
              {main}
            </div>

            {/* Layer 2 - static inside sidebar */}
            {openMenu === main && (
              <div className="submenu-expanded">
                {Object.keys(menuItems[main]).map((sub) => (
                  <div key={sub} className="submenu-item-expanded">
                    {sub || main}
                    {/* Layer 3 - hover menu */}
                    {menuItems[main][sub].length > 0 && (
                      <div className="hover-menu">
                        {menuItems[main][sub].map((third, idx) => (
                          <div key={idx} className="hover-item">
                            {third}
                          </div>
                        ))}
                      </div>
                    )}
                  </div>
                ))}
              </div>
            )}
          </div>
        ))}
      </div>

      {/* Main content */}
      <div className="main-content" style={{ padding: "20px", flex: 1 }}>
        <h2>Welcome to SCB Styled Dashboard</h2>
        <p>Click left menu â†’ hover submenus to navigate.</p>
      </div>
    </div>
  );
};

export default Dashboard;


/* Sidebar */
.bar {
  width: 220px;
  background-color: #005aa7; /* SCB blue */
  color: white;
  min-height: 100vh;
  padding-top: 15px;
}

.logo {
  width: 40px;
  margin: 10px;
}

.brand-name {
  font-size: 16px;
  font-weight: bold;
  padding: 5px 15px;
  display: block;
}

/* Layer 1 */
.content {
  padding: 12px 20px;
  font-size: 15px;
  cursor: pointer;
}
.content:hover {
  background-color: #004080;
}

/* Layer 2 */
.submenu-expanded {
  background-color: #004c97;
}
.submenu-item-expanded {
  padding: 10px 25px;
  font-size: 14px;
  position: relative;
  cursor: pointer;
}
.submenu-item-expanded:hover {
  background-color: #003366;
}

/* Layer 3 - hover floating menu */
.hover-menu {
  display: none;
  position: absolute;
  left: 100%;
  top: 0;
  background: white;
  color: black;
  min-width: 200px;
  border: 1px solid #ddd;
  z-index: 10;
}
.submenu-item-expanded:hover .hover-menu {
  display: block;
}
.hover-item {
  padding: 10px;
  font-size: 14px;
  cursor: pointer;
}
.hover-item:hover {
  background-color: #f0f0f0;
}
