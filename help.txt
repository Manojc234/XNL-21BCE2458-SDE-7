import React, { useState } from "react";
import { SidebarData } from "./SidebarData";
import '../Styles/custom.css';
import { toast } from "react-toastify";
import "react-toastify/dist/ReactToastify.css";
import { MdLogout, MdPerson } from "react-icons/md";

function Sidebar({ role }) {
  const [activeMenu, setActiveMenu] = useState(null);      // For column 2
  const [hoverSubMenu, setHoverSubMenu] = useState(null);  // For column 3
  const [lockSubMenu, setLockSubMenu] = useState(false);   // Keeps 3rd menu open
  const [boxTop,setBoxTop]=useState(0);

  // Accessibility check
  const checkAccess = (menuKey) => {
    if (menuKey === "Create" && role !== "creator") return false;
    if (menuKey === "Manage" && role !== "manager") return false;
    if (menuKey === "Approver" && role !== "approver") return false;
    return true;
  };

  // Handle clicks with accessibility restriction
  const handleClick = (menuKey) => {
    if (!checkAccess(menuKey)) {
      toast.error("ðŸš« You are restricted from accessing this feature!", {
        position: "top-right",
        autoClose: 2000,
      });
      return;
    }
    toast.success(`âœ… Accessing ${menuKey}`, {
      position: "top-right",
      autoClose: 1500,
    });
  };

  return (
    <div className="app">
      {/* ðŸ”¹ Navbar at top */}
      <div className="navbar">
        <div className="navbar-right">
          <MdPerson size={50} color="white" className="nav-icon"/>
          <MdLogout size={50} color="white" className="nav-icon"/>
        </div>
      </div>

      {/* Sidebar */}
      <div className="sidebar">
        {/* Column 1 - Main Menu */}
        <div className="col main-col">
          {Object.entries(SidebarData).map(([menuKey, menuVal]) => (
            <div
              key={menuKey}
              className={`menu-item vertical ${activeMenu === menuKey ? "active" : ""}`}
              onClick={() => {
                setActiveMenu(menuKey);
                setHoverSubMenu(null);
                setLockSubMenu(false);
              }}
            >
              <span className="icon big">{menuVal.icon}</span>
              <span>{menuKey}</span>
            </div>
          ))}
        </div>

        {/* Column 2 - SubMenu */}
        {activeMenu && (
          <div className="col-2 sub-col">
            {Object.entries(SidebarData[activeMenu].subMenu || {}).map(
              ([subKey, subVal]) => (
                <div
                  key={subKey}
                  className={`menu-item-2 vertical ${hoverSubMenu === subKey ? "active" : ""}`}
                  onMouseEnter={(e) => {
                    setHoverSubMenu(subKey);
                    setBoxTop(e.currentTarget.offsetTop);
                    setLockSubMenu(true);
                  }}
                  onClick={() => handleClick(subKey)}
                >
                  <span className="icon">{subVal.icon}</span>
                  <span>{subKey}</span>
                </div>
              )
            )}
          </div>
        )}

        {/* Column 3 - Hover SubSubMenu */}
        {activeMenu &&
          hoverSubMenu &&
          SidebarData[activeMenu].subMenu[hoverSubMenu].subMenu && (
            <div
              className="submenu-box" style={{top:boxTop}}
              onMouseEnter={() => setLockSubMenu(true)}
              onMouseLeave={() => {
                setLockSubMenu(false);
              }}
            >
              {Object.entries(
                SidebarData[activeMenu].subMenu[hoverSubMenu].subMenu
              ).map(([thirdKey, thirdVal]) => (
                <div 
                  key={thirdKey} 
                  className="menu-item-3 vertical leaf"
                  onClick={() => handleClick(thirdKey)}
                >
                  <span className="icon">{thirdVal}</span>
                  <span>{thirdKey}</span>
                </div>
              ))}
            </div>
          )}
      </div>
    </div>
  );
}

export default Sidebar;



/* ðŸ”¹ Navbar */
.navbar {
  height: 70px;
  width: 100%;
  background: #0d47a1;  /* bank blue */
  display: flex;
  align-items: center;
  justify-content: flex-end;
  padding: 0 20px;
  box-shadow: 0 2px 5px rgba(0,0,0,0.2);
}

.navbar-right {
  display: flex;
  gap: 20px;
}

.nav-icon {
  cursor: pointer;
  transition: transform 0.2s ease;
}

.nav-icon:hover {
  transform: scale(1.1);
}
/* ðŸ”¹ Navbar */
.navbar {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;   /* ðŸ”¥ Full width */
  height: 90px;  /* Bigger height */
  background: linear-gradient(90deg, #0d47a1, #1565c0); /* SCB-style gradient */
  display: flex;
  align-items: center;
  justify-content: flex-end;  /* icons to right */
  padding: 0 30px;
  box-shadow: 0 4px 8px rgba(0,0,0,0.25);
  z-index: 1000;
}

/* ðŸ”¹ Push sidebar below navbar */
.sidebar {
  margin-top: 90px;  /* Same as navbar height */
  background: #1565c0;
  min-height: 100vh;
  box-shadow: 2px 0 6px rgba(0,0,0,0.2);
}
