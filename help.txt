package com.sc.faas.API;

import com.sc.faas.dto.Form;
import jakarta.ws.rs.Consumes;
import jakarta.ws.rs.POST;
import jakarta.ws.rs.Path;
import jakarta.ws.rs.core.MediaType;
import org.eclipse.microprofile.rest.client.inject.RegisterRestClient;
@Path("/submit")
@RegisterRestClient
public interface Xapi {

    @POST
    @Consumes(MediaType.APPLICATION_JSON)
    Form submit(Form dto);
}
package com.sc.faas.dto;

public class Form {
    public String name;
    public String email;
    public String dob;
    public String gender;
    public String pno;

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getDob() {
        return dob;
    }

    public void setDob(String dob) {
        this.dob = dob;
    }

    public String getGender() {
        return gender;
    }

    public void setGender(String gender) {
        this.gender = gender;
    }

    public String getPno() {
        return pno;
    }

    public void setPno(String pno) {
        this.pno = pno;
    }
}
package com.sc.faas.dto;




public class Message {
    public String name;


}
package com.sc.faas.dto;



public class MyObject {
    public Long id;
    public String name;

    public MyObject(Long id, String name) {
        this.id = id;
        this.name = name;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }
}
package com.sc.faas.service;

import com.sc.faas.API.Xapi;
import com.sc.faas.dto.Form;
//import com.sc.faas.dto.MyObject;
import jakarta.enterprise.context.ApplicationScoped;
import jakarta.inject.Inject;
import org.eclipse.microprofile.rest.client.inject.RestClient;

@ApplicationScoped
public class MutationService {
    @Inject
    @RestClient
    Xapi xapi;

    public Form submitForm(Form form)
    {
        return xapi.submit(form);
    }

    //public MyObject updateObject(Long id, String name) {
       // return new MyObject(id, name);
    //}
}
package com.sc.faas.service;

import com.sc.faas.dto.Message;
//import com.sc.faas.dto.MyObject;
import jakarta.enterprise.context.ApplicationScoped;

import java.util.List;

@ApplicationScoped
public class QueryService {

    //public List<MyObject> objects() {
        //return List.of(new MyObject(10L, "TEST"));
    //}

    public Message get_message(){
        return  new Message();
    }
}
package com.sc.faas;

import com.expediagroup.graphql.generator.TopLevelObject;
import com.sc.devkit.graphql.dto.Input;
import com.sc.devkit.graphql.service.GraphQLServer;
import com.sc.devkit.graphql.service.GraphQLUtil;
import com.sc.faas.service.MutationService;
import com.sc.faas.service.QueryService;
import io.quarkus.funqy.Funq;
import jakarta.inject.Inject;
import jakarta.enterprise.context.ApplicationScoped;

import java.util.List;

@ApplicationScoped
public class Function {

    @Inject
    private QueryService queryService;

    @Inject
    private MutationService mutationService;

    private GraphQLServer graphQLServer;

    public GraphQLServer getGraphQLServer() {
        if (graphQLServer == null) {
            graphQLServer = new GraphQLServer.Builder()
                    .federatedSupportedPackages(List.of("com.sc.faas.dto"))
                    .queries(List.of(new TopLevelObject(queryService, GraphQLUtil.fromJavaClass(QueryService.class))))
                    .mutations(List.of(new TopLevelObject(mutationService, GraphQLUtil.fromJavaClass(MutationService.class))))
                    .build();
        }
        return graphQLServer;
    }

    @Funq
    public Object graphql(Input input) {
        return getGraphQLServer().serve(input);
    }
}
quarkus.http.port=8080
quarkus.http.host=0.0.0.0
quarkus.grpc.dev-mode.force-server-start=false
quarkus.otel.enabled=false
quarkus.rest-client."com.sc.faas.API.Xapi".url=http://localhost:8081
devkit.federated.supported.packages=com.sc.faas,com.sc.devkit
http://localhost:8080/graphql
mutation{
    submitForm(form:{
        name:"xxy",
        email:"xxy@gmail.com",
        dob:"2027-08-02",
        gender:"female",
        pno:"900000"

    })
    {
        name
        email
        dob
        gender
        pno
    } 
}
"details": "Error id c5414d1d-7186-45dd-9de7-fc4d36b8fdf8-1, io.quarkus.funqy.runtime.ApplicationException: com.expediagroup.graphql.generator.exceptions.TypeNotSupportedException: Cannot convert kotlin.Unit since it is not a valid GraphQL type or outside the supported packages \"[com.sc.devkit.graphql.dto.pagination.PageInfoDisplay, com.sc.faas.dto, com.sc.faas, com.sc.devkit]\"",

process api is runnin all fine no errors there and returnin this after postin :{
    "id": 2251,
    "name": "axy",
    "email": "Exy@gmail.com",
    "dob": "2027-08-02",
    "gender": "female",
    "pno": "900000"
}
