import React, { useState, useEffect } from "react";
import { Navigate } from "react-router-dom";


/*const ProtectedRoute = ({ role, allowedRoles, children }) => {
  const [restricted, setRestricted] = useState(false);

  useEffect(() => {
    if (!allowedRoles.includes(role)) {
      setRestricted(true);
    }
  }, [role, allowedRoles]);

  if (restricted) {
    return (
      <div className="modal-overlay">
        <div className="modal-card">
          <h3 className="modal-title">Access Restricted</h3>
          <p className="modal-text"> You are restricted from accessing this page!</p>
          <div className="modal-actions">
            <a className="modal-btn" href="/">Close</a>
          </div>
        </div>
      </div>
    );
  }

  return children;
};

export default ProtectedRoute;*/

import { jwtDecode } from "jwt-decode";

const ProtectedRoute = ({ children, allowedRoles }) => {
  const token = localStorage.getItem("jwt");

  if (!token) {
    
    return <Navigate to="/login" replace />;
  }

  try {
    const decoded = jwtDecode(token);
    const userRoles = (decoded.roles || []).map(r=>r.toLowerCase());

    
    const hasAccess = allowedRoles.some(role => userRoles.includes(role.toLowerCase()));

    if (!hasAccess) {
      return (
        <div className="modal-overlay">
        <div className="modal-card">
          <h3 className="modal-title">Access Restricted</h3>
          <p className="modal-text"> You are restricted from accessing this page!</p>
          <div className="modal-actions">
            <a className="modal-btn" href="/">Close</a>
          </div>
        </div>
      </div>
      );
     
    }

    return children;
  } catch (err) {
    console.error("Invalid token", err);
    return <Navigate to="/login" replace />;
  }
};

export default ProtectedRoute;

