import React, { useState } from "react";
import "bootstrap/dist/css/bootstrap.min.css";
import "../Styles/custom.css";

import ScLogo from "../assets/ScLogo.jpg";
import Logout from "../assets/Logout.png";
import user from "../assets/user.jpg";

import { MdAccountBalance, MdOutlineManageAccounts } from "react-icons/md";
import {
  FaMoneyCheckAlt, FaChevronRight, FaChevronDown, FaLock, FaUserShield,
  FaUserTie, FaPlusCircle, FaUserEdit, FaUserPlus, FaCalculator, FaFileAlt,
  FaDownload, FaListUl, FaCheck, FaTimes, FaClipboardList, FaCheckSquare
} from "react-icons/fa";

/**
 * role: "creator" | "manager" | "approver" | "operator"
 * (operator can see everything; creator/manager/approver restricted under Cash)
 */
function Dashboard({ role = "operator" }) {
  // which top-level menu is expanded
  const [openTop, setOpenTop] = useState("accounts");
  // which second-level section is hovered (to show the floating third panel)
  const [hoverSection, setHoverSection] = useState({ top: null, section: null });
  // breadcrumb of the selected final item
  const [selectedPath, setSelectedPath] = useState([]);

  // ---- MENU MODEL (keep icons close to labels for clarity) ----
  const MENU = [
    {
      key: "accounts",
      label: "Accounts",
      icon: <MdAccountBalance />,
      sections: [
        {
          key: "current",
          label: "Current Account",
          items: [
            { key: "accDetails", label: "Account Details", icon: <FaFileAlt /> },
            { key: "serviceReq", label: "Service Request", icon: <FaClipboardList /> },
            { key: "employees", label: "Employees", icon: <FaUserTie /> },
          ],
        },
        {
          key: "change",
          label: "Change Account",
          items: [
            { key: "addAcc", label: "Add Account", icon: <FaUserPlus /> },
            { key: "editAcc", label: "Edit Account", icon: <FaUserEdit /> },
            { key: "editEmpAcc", label: "Edit Employee Accounts", icon: <MdOutlineManageAccounts /> },
          ],
        },
      ],
    },
    {
      key: "cash",
      label: "Cash",
      icon: <FaMoneyCheckAlt />,
      sections: [
        {
          key: "create",
          label: "Create",
          roles: ["creator"], // only creators
          items: [
            { key: "payroll", label: "Payroll", icon: <FaCheckSquare /> },
            { key: "rolledPayees", label: "Rolled Payees", icon: <FaUserTie /> },
            { key: "drafts", label: "Drafts", icon: <FaFileAlt /> },
            { key: "qcc", label: "Quick Currency Calculator", icon: <FaCalculator /> },
          ],
        },
        {
          key: "manage",
          label: "Manage",
          roles: ["manager"], // only managers
          items: [
            { key: "makeApprovers", label: "Make Approvers", icon: <FaUserShield /> },
            { key: "viewRolled", label: "View Rolled Payees", icon: <FaUserTie /> },
          ],
        },
        {
          key: "approve",
          label: "Approve",
          roles: ["approver"], // only approvers
          items: [
            { key: "approved", label: "Approved Payees", icon: <FaCheck /> },
            { key: "pending", label: "Pending Payees", icon: <FaClipboardList /> },
          ],
        },
      ],
    },
    {
      key: "transactions",
      label: "Transactions",
      icon: <FaListUl />,
      sections: [
        {
          key: "rolled",
          label: "Rolled Payees",
          items: [
            { key: "failed", label: "Failed Transactions", icon: <FaTimes /> },
            { key: "success", label: "Successful Transactions", icon: <FaCheck /> },
            { key: "hold", label: "Hold Transactions", icon: <FaClipboardList /> },
          ],
        },
        {
          key: "estatements",
          label: "E-Statements",
          items: [
            { key: "filter", label: "Filter Transactions", icon: <FaListUl /> },
            { key: "download", label: "Download Transactions", icon: <FaDownload /> },
            { key: "summary", label: "Transactions Summary", icon: <FaFileAlt /> },
          ],
        },
      ],
    },
    {
      key: "settings",
      label: "Settings",
      icon: <FaLock />,
      sections: [
        {
          key: "settingsRoot",
          label: "General",
          items: [
            { key: "changePwd", label: "Change Password", icon: <FaLock /> },
            { key: "viewApprovers", label: "View Approvers", icon: <FaUserShield /> },
            { key: "viewManagers", label: "View Managers", icon: <FaUserTie /> },
            { key: "viewCreates", label: "View Creates", icon: <FaPlusCircle /> },
          ],
        },
      ],
    },
  ];

  // filter cash sections by role; all other top-levels open to everyone
  const filterSectionsByRole = (top) => {
    if (top.key !== "cash") return top.sections;
    return top.sections.filter(
      (sec) => !sec.roles || sec.roles.includes(role) || role === "operator"
    );
  };

  const onClickFinalItem = (tLabel, sLabel, iLabel) => {
    setSelectedPath([tLabel, sLabel, iLabel]);
  };

  // ---- RENDERERS ----
  const renderThirdPanel = (topKey, sec, tLabel) => {
    const isOpen = hoverSection.top === topKey && hoverSection.section === sec.key;
    if (!isOpen) return null;
    return (
      <div className="third-panel">
        <div className="third-title">{sec.label}</div>
        {sec.items.map((it) => (
          <div
            key={it.key}
            className="third-item"
            onClick={() => onClickFinalItem(tLabel, sec.label, it.label)}
          >
            <span className="me-2">{it.icon}</span>
            {it.label}
          </div>
        ))}
      </div>
    );
  };

  const renderSidebar = () => (
    <>
      <img className="logo" src={ScLogo} alt="logo" />
      <span className="brand-name text-light">Straight2Bank</span>

      {MENU.map((top) => {
        const sections = filterSectionsByRole(top);
        return (
          <div key={top.key} className="top-block">
            {/* LAYER 1 (click to expand) */}
            <button
              className={`top-item ${openTop === top.key ? "active" : ""}`}
              onClick={() => setOpenTop(openTop === top.key ? null : top.key)}
            >
              <span className="me-2">{top.icon}</span>
              {top.label}
              <span className="ms-auto">{openTop === top.key ? <FaChevronDown /> : <FaChevronRight />}</span>
            </button>

            {/* LAYER 2 (static inside sidebar) */}
            {openTop === top.key && (
              <div className="second-list">
                {sections.map((sec) => (
                  <div
                    className="second-item"
                    key={sec.key}
                    onMouseEnter={() => setHoverSection({ top: top.key, section: sec.key })}
                    onMouseLeave={() => setHoverSection({ top: null, section: null })}
                  >
                    <span>{sec.label}</span>
                    <FaChevronRight className="chev" />
                    {/* LAYER 3 (hover-floating panel) */}
                    {renderThirdPanel(top.key, sec, top.label)}
                  </div>
                ))}
              </div>
            )}
          </div>
        );
      })}
    </>
  );

  const renderMain = () => {
    if (selectedPath.length === 0) {
      return (
        <div className="container-fluid">
          <div className="row g-4 mb-4">
            <div className="col-md-4">
              <div className="card gradient-card shadow-sm text-white">
                <div className="card-body">
                  <h5 className="card-title">Account Balance</h5>
                  <h3>₹ 2,00,45,000</h3>
                  <button className="b btn btn-light btn-sm mt-2">View Balance</button>
                </div>
              </div>
            </div>
            <div className="col-md-4">
              <div className="card gradient-card-2 shadow-sm text-white">
                <div className="card-body">
                  <h5 className="card-title">Approval Status</h5>
                  <h3>5 Pending</h3>
                  <button className="b btn btn-light btn-sm mt-2">Approve</button>
                </div>
              </div>
            </div>
            <div className="col-md-4">
              <div className="card gradient-card-3 shadow-sm text-white">
                <div className="card-body">
                  <h5 className="card-title">Transactions Today</h5>
                  <h3>23</h3>
                  <button className="b btn btn-light btn-sm mt-2">Transactions</button>
                </div>
              </div>
            </div>
          </div>
        </div>
      );
    }
    return (
      <div className="p-4">
        <div className="breadcrumbx">
          {selectedPath.join("  ›  ")}
        </div>
        <div className="mt-3">
          <h4>{selectedPath[selectedPath.length - 1]}</h4>
          <p className="text-muted">This is placeholder content for <strong>{selectedPath.join(" / ")}</strong>.</p>
        </div>
      </div>
    );
  };

  return (
    <div className="d-flex dashboard-container">
      {/* SIDEBAR */}
      <div className="bar text-white p-3">
        {renderSidebar()}
      </div>

      {/* RIGHT SIDE */}
      <div className="flex-grow-1 d-flex flex-column">
        <nav className="px-3 d-flex justify-content-between align-items-center">
          <div className="userprofile text-light">
            <img className="logo2" src={user} alt="user" /> SCB0334
          </div>
          <img className="logo1" src={Logout} alt="logout" />
        </nav>
        <div className="flex-grow-1 p-4 bg-light">
          {renderMain()}
        </div>
      </div>
    </div>
  );
}

export default Dashboard;



/* Layout */
.dashboard-container { height: 100vh; }

/* Sidebar base */
.bar {
  width: 230px;
  min-height: 100vh;
  background-color: #023b97dc; /* exact SCB blue from your photo */
  position: relative;
  box-shadow: 2px 0 6px rgba(0,0,0,0.15);
}

/* Branding */
.logo { height:60px; width:60px; margin:12px 0 10px 18px; border-radius:50%; border:2px solid #fff; }
.brand-name { position:relative; top:-5px; left:18px; display:block; color:#fff; font-weight:700; }

/* Top-level items (Layer 1) */
.top-block { margin-bottom: 6px; }
.top-item {
  width: 100%;
  color: #fff;
  background: transparent;
  border: 0;
  text-align: left;
  padding: 12px 14px;
  border-radius: 6px;
  display: flex; align-items:center; gap:8px;
  cursor: pointer;
  transition: background .2s ease, padding-left .2s ease;
}
.top-item:hover { background-color:#04215f; padding-left:18px; }
.top-item.active { background-color:#04215f; }

/* Second layer – static inside the bar */
.second-list { padding: 4px 0 6px 8px; }
.second-item {
  position: relative;
  background: rgba(255,255,255,0.06);
  color:#fff;
  margin: 6px 8px 6px 14px;
  padding: 10px 28px 10px 12px;
  border-radius: 6px;
  font-size: 0.95rem;
  cursor:pointer;
}
.second-item:hover { background-color:#295caddc; }
.second-item .chev { position:absolute; right:8px; top:50%; transform:translateY(-50%); }

/* Third layer – floating white panel on hover */
.third-panel {
  position: absolute;
  left: 100%;
  top: 0;
  min-width: 240px;
  background: #ffffff;
  color: #222;
  box-shadow: 0 8px 18px rgba(0,0,0,0.18);
  border-radius: 6px;
  z-index: 200;
}
.third-title {
  font-weight: 600;
  padding: 10px 12px;
  border-bottom: 1px solid #eee;
  color:#555;
}
.third-item {
  padding: 10px 12px;
  display: flex; align-items:center;
  gap:10px;
  cursor: pointer;
}
.third-item:hover { background-color:#f5f7fb; }

/* Top bar */
.px-3 { background-color:#023b97dc; height:70px; color:#fff; box-shadow:0 1px 6px rgba(0,0,0,0.08); }
.logo2 { height:32px; width:32px; border-radius:50%; border:2px solid #fff; }
.logo1 { height:28px; width:28px; cursor:pointer; }

/* Cards */
.card { border-radius:12px; border:none; }
.card-body { background:#023b97dc; border-radius:12px; color:#fff; transition:background .2s ease; }
.card-body:hover { background:#04215f; }

/* Buttons */
.b,.Q{ background-color:#f1f5ff; border:none; color:#000; padding:6px 14px; border-radius:6px; }
.b:hover,.Q:hover{ background-color:#295caddc; color:#fff; }

/* Table (kept from your earlier styles if needed) */
.modern-service-table { width:100%; border-collapse:separate; border-spacing:0 10px; }
.modern-service-table thead { background-color:#023b97dc; color:#fff; }
.modern-service-table thead th { padding:12px; text-align:left; }
.modern-service-table tbody tr { background-color:#fff; box-shadow:0 2px 6px rgba(0,0,0,0.05); border-radius:8px; }

.breadcrumbx{ font-weight:600; color:#023b97dc; }
