import React, { useState } from "react";
import {
  Home,
  User,
  Settings,
  FileText,
  DollarSign,
  Users,
  Key,
  ListChecks,
  Download,
  Eye,
  Calculator,
  CheckCircle,
  Clock,
  XCircle,
} from "lucide-react"; // icons

// ðŸŽ¨ Bank blue theme
const sidebarStyles = {
  bg: "bg-[#002b5c]", // dark bank blue
  hover: "hover:bg-[#004080]", // lighter hover blue
  text: "text-white",
  active: "bg-[#004d99]",
};

// ðŸ”¹ Sidebar Menu Data (dynamic)
const menuData = [
  {
    title: "Accounts",
    icon: <User size={18} />,
    subMenu: [
      {
        title: "Current Account",
        subMenu: [
          { title: "Account Details", icon: <FileText size={16} /> },
          { title: "Service Request", icon: <ListChecks size={16} /> },
          { title: "Employees", icon: <Users size={16} /> },
        ],
      },
      {
        title: "Change Account",
        subMenu: [
          { title: "Add Account", icon: <Plus size={16} /> },
          { title: "Edit Account", icon: <FileText size={16} /> },
          { title: "Edit Employee Accounts", icon: <Users size={16} /> },
        ],
      },
    ],
  },
  {
    title: "Cash",
    icon: <DollarSign size={18} />,
    subMenu: [
      {
        title: "Create",
        subMenu: [
          { title: "Payroll", icon: <DollarSign size={16} /> },
          { title: "Rolled Payees", icon: <Users size={16} /> },
          { title: "Drafts", icon: <FileText size={16} /> },
          { title: "Quick Currency Calculator", icon: <Calculator size={16} /> },
        ],
      },
      {
        title: "Manage",
        subMenu: [
          { title: "Make Approvers", icon: <User size={16} /> },
          { title: "View Rolled Payees", icon: <Eye size={16} /> },
        ],
      },
      {
        title: "Approve",
        subMenu: [
          { title: "Approved Payees", icon: <CheckCircle size={16} /> },
          { title: "Pending Payees", icon: <Clock size={16} /> },
        ],
      },
    ],
  },
  {
    title: "Transactions",
    icon: <FileText size={18} />,
    subMenu: [
      {
        title: "Rolled Payees",
        subMenu: [
          { title: "Failed Transactions", icon: <XCircle size={16} /> },
          { title: "Successful Transactions", icon: <CheckCircle size={16} /> },
          { title: "Hold Transactions", icon: <Clock size={16} /> },
        ],
      },
      {
        title: "E-statements",
        subMenu: [
          { title: "Filter Transactions", icon: <ListChecks size={16} /> },
          { title: "Download Transactions", icon: <Download size={16} /> },
          { title: "Transactions Summary", icon: <FileText size={16} /> },
        ],
      },
    ],
  },
  {
    title: "Settings",
    icon: <Settings size={18} />,
    subMenu: [
      { title: "Change Password", icon: <Key size={16} /> },
      { title: "View Approvers", icon: <Users size={16} /> },
      { title: "View Managers", icon: <Users size={16} /> },
      { title: "View Creates", icon: <Users size={16} /> },
    ],
  },
];

// ðŸ”¹ Role-based access
const roleAccess = {
  creator: ["Create"],
  manager: ["Manage"],
  approver: ["Approve"],
  everyone: ["Accounts", "Cash", "Transactions", "Settings"],
};

// ðŸ”¹ Recursive Menu Component
const MenuItem = ({ item, role }) => {
  const [open, setOpen] = useState(false);

  // Hide restricted menus
  if (
    role !== "admin" &&
    !roleAccess.everyone.includes(item.title) &&
    !roleAccess[role]?.includes(item.title)
  ) {
    return null;
  }

  return (
    <div>
      <div
        className={`flex items-center gap-2 p-2 cursor-pointer ${sidebarStyles.text} ${sidebarStyles.hover}`}
        onClick={() => setOpen(!open)}
      >
        {item.icon}
        <span>{item.title}</span>
      </div>

      {open && item.subMenu && (
        <div className="ml-4 border-l border-gray-500">
          {item.subMenu.map((sub, i) => (
            <MenuItem key={i} item={sub} role={role} />
          ))}
        </div>
      )}
    </div>
  );
};

// ðŸ”¹ Main Sidebar Component
const Sidebar = ({ role }) => {
  return (
    <div className={`w-64 h-screen ${sidebarStyles.bg} shadow-lg`}>
      <h2 className="text-white text-lg font-bold p-4 border-b border-gray-700">
        Dashboard
      </h2>
      <div className="p-2">
        {menuData.map((item, i) => (
          <MenuItem key={i} item={item} role={role} />
        ))}
      </div>
    </div>
  );
};

export default Sidebar;



import React from "react";
import Sidebar from "./Sidebar"; // import the sidebar we built

function App() {
  // Change role here to see dynamic access (creator / manager / approver / admin)
  const role = "creator";

  return (
    <div className="flex">
      {/* Sidebar */}
      <Sidebar role={role} />

      {/* Main Content */}
      <div className="flex-1 p-6 bg-gray-100">
        <h1 className="text-2xl font-bold">Welcome, {role}</h1>
        <p className="mt-4">
          This is your dashboard. The sidebar is fully dynamic and role-based.
        </p>
      </div>
    </div>
  );
}

export default App;


.sidebar {
  width: 250px;
  height: 100vh;
  background-color: #002b5c; /* Bank dark blue */
  color: white;
  box-shadow: 2px 0px 5px rgba(0, 0, 0, 0.2);
}

.sidebar-header {
  padding: 16px;
  font-size: 18px;
  font-weight: bold;
  border-bottom: 1px solid #004080;
}

.menu-item {
  display: flex;
  align-items: center;
  padding: 10px 16px;
  cursor: pointer;
  transition: background 0.3s;
}

.menu-item:hover {
  background-color: #004080; /* lighter hover blue */
}

.submenu {
  margin-left: 16px;
  border-left: 1px solid #335c99;
}


